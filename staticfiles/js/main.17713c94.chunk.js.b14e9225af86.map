{"version":3,"sources":["components/Articles.js","services/request.js","services/api.js","containers/ArticleListView.js","containers/ArticleDetailView.js","routes.js","containers/Layout.js","App.js","serviceWorker.js","index.js"],"names":["IconText","_ref","type","text","react_default","a","createElement","icon","style","marginRight","Articles","props","list","itemLayout","size","pagination","onChange","page","console","log","pageSize","dataSource","data","footer","renderItem","item","Item","key","title","actions","Articles_IconText","extra","width","alt","src","Meta","avatar","href","concat","id","description","content","client","axios","create","baseURL","process","REACT_APP_PROD_API_URL","request","options","then","response","debug","catch","error","config","status","headers","message","Promise","reject","ApiService","get","url","method","getId","ArticleListView","state","articles","_this2","this","setState","components_Articles","Component","ArticleDetailView","article","match","params","articleID","card","BaseRouter","Route","exact","path","component","Header","Layout","Content","Footer","CustomLayout","layout","position","zIndex","className","menu","theme","mode","defaultSelectedKeys","lineHeight","padding","marginTop","breadcrumb","margin","Link","to","background","minHeight","children","textAlign","App","BrowserRouter","routes","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17713c94.chunk.js","sourcesContent":["import React from 'react'\nimport { List, Avatar, Icon } from 'antd';\n\n\n\nconst IconText = ({ type, text }) => (\n    <span>\n        <Icon type={type} style={{ marginRight: 8 }} />\n        {text}\n    </span>\n);\n\nconst Articles = (props) => {\n\n    return (\n\n        <List\n            itemLayout=\"vertical\"\n            size=\"large\"\n            pagination={{\n                onChange: (page) => {\n                    console.log(page);\n                },\n                pageSize: 3,\n            }}\n            dataSource={props.data}\n            footer={<div><b>ant design</b> footer part</div>}\n\n            renderItem={item => (\n                <List.Item\n                    key={item.title}\n                    actions={[<IconText type=\"star-o\" text=\"156\" />, <IconText type=\"like-o\" text=\"156\" />, <IconText type=\"message\" text=\"2\" />]}\n                    extra={<img width={272} alt=\"logo\" src=\"https://gw.alipayobjects.com/zos/rmsportal/mqaQswcyDLcXyDKnZfES.png\" />}\n                >\n                    <List.Item.Meta\n\n                        avatar={<Avatar src={item.avatar} />}\n                        title={<a href={`${item.id}`}>{item.title}</a>}\n                        description={item.description}\n                    />\n                    {item.content}\n                </List.Item>\n            )}\n        />\n    );\n}\n\nexport default Articles;","/**\n * Axios Request Wrapper\n * ---------------------\n *\n * @author  Sheharyar Naseer (@sheharyarn)\n * @license MIT\n *\n */\n\nimport axios from 'axios'\n\n\n\n\n/**\n * Create an Axios Client with defaults\n */\nconst client = axios.create({\n    baseURL: process.env.NODE_ENV === 'development' ? process.env.REACT_APP_DEV_API_URL : process.env.REACT_APP_PROD_API_URL\n});\n\n\n\n/**\n * Request Wrapper with default success/error actions\n */\nconst request = function (options) {\n\n    const onSuccess = function (response) {\n        console.debug('Request Successful!', response);\n        return response.data;\n    }\n\n    const onError = function (error) {\n\n        console.error('Request Failed:', error.config);\n\n        if (error.response) {\n            // Request was made but server responded with something\n            // other than 2xx\n            console.error('Status:', error.response.status);\n            console.error('Data:', error.response.data);\n            console.error('Headers:', error.response.headers);\n\n        } else {\n            // Something else happened while setting up the request\n            // triggered the error\n            console.error('Error Message:', error.message);\n        }\n\n        return Promise.reject(error.response || error.message);\n    }\n\n    return client(options)\n        .then(onSuccess)\n        .catch(onError);\n}\n\nexport default request;","import request from './request';\n\n\nfunction get() {\n\n\n    return request({\n        url: `/api/`,\n        method: 'GET'\n    });\n}\n\nfunction getId(id) {\n    return request({\n        url: `/api/${id}`,\n        method: 'GET'\n    });\n}\n\n\n/*function create({ subject, content }) {\n    return request({\n        url: '/message/create',\n        method: 'POST',\n        data: {\n            subject,\n            content\n        }\n    });\n}*/\n\nconst ApiService = {\n    get, getId/*, create*/ //, update, delete, etc. ...\n}\n\nexport default ApiService;","\nimport React, { Component } from 'react'\n\nimport Articles from '../components/Articles';\nimport ApiService from '../services/api'\n\n\n\nexport default class ArticleListView extends Component {\n\n    state = {\n        articles: []\n    }\n\n    componentDidMount() {\n       \n\n        ApiService.get().then(response => {\n\n            this.setState({\n                articles: response\n            });\n\n        })\n\n\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Articles data={this.state.articles} />\n            </div>\n        )\n    }\n}\n","\nimport React, { Component } from 'react'\nimport { Card } from 'antd'\nimport ApiService from '../services/api'\n\nexport default class ArticleDetailView extends Component {\n\n    state = {\n        article: {}\n    }\n\n    \n\n    componentDidMount() {\n       \n\n        ApiService.getId(this.props.match.params.articleID).then(response => {\n\n            this.setState({\n                article: response\n            });\n\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Card title={this.state.article.title}>\n                    <p>{this.state.article.description}</p>\n                </Card>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nimport { Route } from 'react-router-dom'\nimport ArticleListView from './containers/ArticleListView'\nimport ArticleDetailView from './containers/ArticleDetailView';\n\nconst BaseRouter = () => (\n\n    <div>\n        <Route exact path='/' component={ArticleListView}></Route>\n        <Route exact path='/:articleID' component={ArticleDetailView}></Route>\n    </div>\n);\n\nexport default BaseRouter;","import React from 'react'\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Link } from 'react-router-dom';\nconst { Header, Content, Footer } = Layout;\n\nconst CustomLayout = (props) => {\n    return (\n        <Layout>\n            <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n                <div className=\"logo\" />\n                <Menu\n                    theme=\"dark\"\n                    mode=\"horizontal\"\n                    defaultSelectedKeys={['2']}\n                    style={{ lineHeight: '64px' }}\n                >\n                    <Menu.Item key=\"1\">nav 1</Menu.Item>\n                    <Menu.Item key=\"2\">nav 2</Menu.Item>\n                    <Menu.Item key=\"3\">nav 3</Menu.Item>\n                </Menu>\n            </Header>\n            <Content style={{ padding: '0 50px', marginTop: 64 }}>\n                <Breadcrumb style={{ margin: '16px 0' }}>\n                    <Breadcrumb.Item><Link to=\"/\">Home</Link></Breadcrumb.Item>\n                    <Breadcrumb.Item><Link to=\"/\">List</Link></Breadcrumb.Item>\n\n                </Breadcrumb>\n                <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\n                    {props.children}\n                </div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>\n                Ant Design ©2018 Created by Ant UED\n            </Footer>\n        </Layout>\n    );\n}\n\nexport default CustomLayout;\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport BaseRouter from './routes';\nimport CustomLayout from './containers/Layout';\n\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div className=\"App\">\n\n        <Router>\n          <CustomLayout>\n            <BaseRouter></BaseRouter>\n          </CustomLayout>\n        </Router>\n\n\n\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}